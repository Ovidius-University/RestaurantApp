@model OrderTimeVm

@{
    ViewData["Title"] = "TimePeriod";
    decimal cost = 0;
    int solds = 0;
}

@if (Model.id == 1)
{
    <h1>Website orders with your company's items in the last day</h1>
}
else if (Model.id == 2)
{
    <h1>Website orders with your company's items in the last month</h1>
}
else if (Model.id == 3)
{
    <h1>Website orders with your company's items in the last year</h1>
}

<br />
@await Html.PartialAsync("_MessageResponse", "MessageManagerOrder")
<table class="table">
    <thead>
        <tr>
            <th>
                Order Number
            </th>
            <th>
                Cost (without tip)
            </th>
            <th>
                Is it a Delivery?
            </th>
            <th>
                Tip
            </th>
            <th>
                Paying Method
            </th>
            <th>
                Order Time
            </th>
            <th>
                Picked Arrival Time
            </th>
            <th>
                Delivery Time
            </th>
            <th>
                Feedback
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ListOrders!)
        {
            solds += 1;
            cost += item.Cost;
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cost) RON
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsDelivery)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tip) RON
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PayingMethod)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ArrivalTime)
                </td>
                @if (item.IsFinal == true)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.DeliveryTime)
                    </td>
                }
                else
                {
                    <td>
                        The order hasn't been delivered or picked up yet
                    </td>
                }
                @if (item.IsFinal == false)
                {
                    <td>
                        Order isn't finished, so feedback couldn't be sent
                    </td>
                }
                else if (item.Comment != null && item.Comment != string.Empty)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Comment)
                    </td>
                }
                else
                {
                    <td>
                        The customer didn't send any feedback
                    </td>
                }
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-controller="OrderContent" asp-action="Index" asp-route-oid="@item.Id">Order's items</a> |
                    @if (item.Comment != null && item.Comment != string.Empty)
                    {
                        <div> <a asp-action="FeedBack" asp-route-id="@item.Id">Feedback</a> </div>
                    }
                </td>
            </tr>
        }
        <h2>Total number of the orders is: @solds</h2>
        <br />
    </tbody>
</table>
<div>
    <partial name="_BackToList" />
</div>
