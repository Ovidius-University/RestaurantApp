@model IndexOrdersVm

@{
    ViewData["Title"] = "Index";
}

<h1>List of all of the available website deliveries</h1>
<br />
        <a asp-action="TimePeriod" asp-route-id=1 class="btn btn-sm btn-primary">Last day</a>
        |
        <a asp-action="TimePeriod" asp-route-id=2 class="btn btn-sm btn-primary">Last month</a>
        |
        <a asp-action="TimePeriod" asp-route-id=3 class="btn btn-sm btn-primary">Last year</a>
<br />
<br />
<table class="table">
    <thead>
        <tr>
            <th>
                Order Number
            </th>
            <th>
                Customer Name
            </th>
            <th>
                Cost (without tip)
            </th>
            @*
            <th>
                Is it a Delivery?
            </th>
            <th>
                Worker Name
            </th>
            *@
            <th>
                Address
            </th>
            <th>
                Tip
            </th>
            <th>
                Paying Method
            </th>
            <th>
                Order Time
            </th>
            <th>
                Picked Arrival Time
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.ListOrders != null)
        {
            @foreach (var item in Model.ListOrders!)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Cost) RON
                    </td>
                    @*
                    <td>
                        @Html.DisplayFor(modelItem => item.IsDelivery)
                    </td>
                    @if (item.DeliveryName != string.Empty && item.DeliveryName != null)
                    {
                    <td>
                        @Html.DisplayFor(modelItem => item.DeliveryName)
                    </td>
                    }
                    else
                    {
                    <td>
                        No worker yet
                    </td>
                    }
                    *@
                    @if (item.Address != string.Empty && item.Address != null)
                    {<td>
                        @Html.DisplayFor(modelItem => item.Address)
                    </td>
                    }
                    else if(item.IsDelivery == false)
                    {<td>
                        Not a delivery
                    </td>
                    }
                    <td>
                        @Html.DisplayFor(modelItem => item.Tip) RON
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PayingMethod)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OrderTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ArrivalTime)
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-controller="OrderContent" asp-action="Index" asp-route-oid="@item.Id">Order's items</a> |
                        <a asp-action="TakeOrder" asp-route-id="@item.Id">Take up the delivery</a>
                        @if (item.WorkerId != 0 && item.WorkerId != null)
                        {
                            <div> | <a asp-action="Edit" asp-route-id="@item.Id">Confirm the delivery</a></div>
                        }
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
@await Html.PartialAsync("_MessageResponse", "MessageDeliveredOrder")
