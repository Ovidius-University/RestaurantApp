@model OrderFeedBackDto

@{
    ViewData["Title"] = "FeedBack";
}

<h1>Order number @Html.DisplayFor(model => model.Id)</h1>
<h2>Cost: @Html.DisplayFor(model => model.Cost) RON</h2>
<h3>Feedback: @Html.DisplayFor(model => model.Comment)</h3>
<hr />
<div>
    <h4>
        <strong>List of the food items of the pick-up</strong>
    </h4>
    <br />
    @foreach(var item in Model.Foods!)
    {
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(modelItem => item.Food)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(modelItem => item.Food)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(modelItem => item.UnitPrice)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(modelItem => item.UnitPrice) RON
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(modelItem => item.Quantity)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(modelItem => item.Quantity)
            </dd>
        </dl>
    }
</div>
<br />
<partial name="_BackToList" />
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
